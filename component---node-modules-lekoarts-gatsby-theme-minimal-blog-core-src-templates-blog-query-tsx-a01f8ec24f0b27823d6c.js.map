{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/blog-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/blog.tsx"],"names":["moment","BlogListItem","data","post","showTags","a","as","Link","to","slug","sx","fontSize","color","title","mt","format","Listing","posts","className","mb","map","key","Blog","useSiteMetadata","tagsPath","basePath","alignItems","justifyContent","flexFlow","variant","query","BlogComponent","allPost","nodes"],"mappings":"uOASAA,SAAc,MAed,IAceC,EAdM,SAAC,GAAD,IAOPC,EAPUC,EAAH,EAAGA,KAAH,EAASC,SAAT,OACnB,uBACE,YAAC,IAAOC,EAAR,CAAUC,GAAIC,OAAMC,GAAIL,EAAKM,KAAMC,GAAI,CAAEC,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAO,SAClET,EAAKU,OAER,iBAAGH,GAAI,CAAEE,MAAO,YAAaE,GAAI,EAAGT,EAAG,CAAEO,MAAO,aAAeD,SAAU,CAAC,EAAG,EAAG,MAEtET,EAAOF,EAAOG,EAAKD,MAAMa,OAAO,0BAC9B,wBAAOb,OCNRc,EARC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,UAAV,IAAqBd,gBAArB,gBACd,uBAASM,GAAI,CAAES,GAAI,CAAC,EAAG,EAAG,IAAMD,UAAWA,GACxCD,EAAMG,KAAI,SAAAjB,GAAI,OACb,YAAC,EAAD,CAAckB,IAAKlB,EAAKM,KAAMN,KAAMA,EAAMC,SAAUA,S,wBCiB3CkB,EAhBF,SAAC,GAA0B,IAAxBL,EAAwB,EAAxBA,MAAwB,EACPM,cADO,EAC9BC,SAD8B,EACpBC,SAElB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKZ,MAAM,SACX,YAAC,IAAD,CAAMH,GAAI,CAAEgB,WAAY,SAAUC,eAAgB,gBAAiBC,SAAU,SAC3E,YAAC,IAAD,CAASC,QAAQ,KAAKvB,GAAG,MAAzB,aAIF,YAAC,EAAD,CAASW,MAAOA,EAAOP,GAAI,CAAEI,GAAI,CAAC,EAAG,QC5B9BgB,GAFEC,UCOA,YAAqB,IAC1BC,EAD0B,EAAlB9B,KACR8B,QAER,OAAO,kBAAC,EAAD,CAAMf,MAAOe,EAAQC,SDRT","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-blog-query-tsx-a01f8ec24f0b27823d6c.js","sourcesContent":["/** @jsx jsx */\r\nimport React from \"react\"\r\nimport { jsx, Styled } from \"theme-ui\"\r\nimport { Box } from \"@theme-ui/components\"\r\nimport { Link } from \"gatsby\"\r\nimport ItemTags from \"./item-tags\"\r\nimport * as moment from 'moment'\r\nimport 'moment/locale/ja'\r\n\r\nmoment.locale('ja')\r\n\r\ntype BlogListItemProps = {\r\n  post: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }\r\n  showTags?: boolean\r\n}\r\n\r\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\r\n  <div>\r\n    <Styled.a as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\r\n      {post.title}\r\n    </Styled.a>\r\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\r\n      {(() => {\r\n        const data = moment(post.data).format('YYYY/MM/DD (ddd) HH:mm')\r\n        return (<time>{data}</time>)\r\n      })()}\r\n    </p>\r\n  </div>\r\n)\r\n\r\nexport default BlogListItem\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport BlogListItem from \"./blog-list-item\"\r\n\r\ntype ListingProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n  className?: string\r\n  showTags?: boolean\r\n}\r\n\r\nconst Listing = ({ posts, className, showTags = true }: ListingProps) => (\r\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\r\n    {posts.map(post => (\r\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\r\n    ))}\r\n  </section>\r\n)\r\n\r\nexport default Listing\r\n","/** @jsx jsx */\r\nimport { jsx, Styled } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport { Heading, Flex } from \"@theme-ui/components\"\r\nimport Layout from \"./layout\"\r\nimport Listing from \"./listing\"\r\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\nimport SEO from \"./seo\"\r\n\r\ntype PostsProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n}\r\n\r\nconst Blog = ({ posts }: PostsProps) => {\r\n  const { tagsPath, basePath } = useSiteMetadata()\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Blog\" />\r\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\r\n        <Heading variant=\"h3\" as=\"h2\">\r\n          イベントレポート\r\n        </Heading>\r\n      </Flex>\r\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import { graphql } from \"gatsby\"\r\nimport BlogComponent from \"../components/blog\"\r\n\r\nexport default BlogComponent\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allPost(sort: { fields: date, order: DESC }) {\r\n      nodes {\r\n        slug\r\n        title\r\n        date(formatString: \"DD.MM.YYYY\")\r\n        tags {\r\n          name\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Blog from \"../../../components/blog\"\r\n\r\ntype Props = {\r\n  data: {\r\n    allPost: any\r\n    [key: string]: string\r\n  }\r\n}\r\n\r\nexport default ({ data }: Props) => {\r\n  const { allPost } = data\r\n\r\n  return <Blog posts={allPost.nodes} />\r\n}\r\n"],"sourceRoot":""}