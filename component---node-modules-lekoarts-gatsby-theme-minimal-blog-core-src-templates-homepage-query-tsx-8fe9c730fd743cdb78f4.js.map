{"version":3,"sources":["webpack:///./src/components/hero.tsx","webpack:///./src/components/events.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/hooks/use-connpass-events.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx"],"names":["Hero","mt","mb","sx","flexWrap","justifyContent","flex","marginRight","marginBottom","src","alt","as","fontSize","textAlign","variant","href","moment","Events","events","length","map","event","startedAt","started_at","format","endedAt","ended_at","key","event_id","event_url","target","title","place","address","useConnpassEvents","data","allConnpassEvents","nodes","Homepage","posts","p","text","query","HomepageComponent","allPost"],"mappings":"qMAqBeA,EAjBF,kBACX,YAAC,IAAD,CAAMC,GAAI,CAAC,IAAK,KAAMC,GAAI,CAAC,IAAK,KAAMC,GAAI,CAAEC,SAAU,OAAQC,eAAgB,WAC5E,YAAC,IAAD,CAAKF,GAAI,CAAEG,KAAM,YAAaC,YAAa,CAAC,EAAG,EAAG,GAAIC,aAAc,CAAC,EAAG,EAAG,KACzE,YAAC,IAAD,CACEC,IAAI,cACJC,IAAI,iBAGR,YAAC,IAAD,KACI,YAAC,IAAD,CAASC,GAAG,KAAKT,GAAI,EAAGC,GAAI,CAAES,SAAU,CAAC,EAAG,EAAG,GAAIC,UAAW,WAA9D,eACA,YAAC,IAAD,CAASF,GAAG,KAAKT,GAAI,EAAGC,GAAI,CAAES,SAAU,CAAC,EAAG,EAAG,GAAIC,UAAW,WAA9D,kCACA,YAAC,IAAD,CAAMC,QAAQ,UAAUX,GAAI,CAAES,SAAU,CAAC,EAAG,EAAG,GAAIX,GAAI,EAAGY,UAAW,WAArE,4BACA,YAAC,IAAD,CAAMC,QAAQ,UAAUX,GAAI,CAAES,SAAU,CAAC,EAAG,EAAG,GAAIX,GAAI,EAAGY,UAAW,WAArE,iBAA+F,YAAC,IAAD,CAAME,KAAK,0FAAX,SAA/F,Y,sBCVRC,SAAc,MAcd,IAuBeC,EAvBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACb,uBACGA,EAAOC,OAAS,EACdD,EAAOE,KAAI,SAAAC,GACV,GAAc,OAAVA,EAAgB,CAClB,IAAMC,EAAYN,EAAOK,EAAME,YAAYC,OAAO,0BAC5CC,EAAUT,EAAOK,EAAMK,UAAUF,OAAO,SAC9C,OACE,mBAAKG,IAAKN,EAAMO,SAAUzB,GAAI,CAAES,SAAU,CAAC,EAAG,KAC5C,YAAC,IAAD,CAAMT,GAAI,CAAES,SAAU,CAAC,EAAG,IAAKG,KAAMM,EAAMQ,UAAWC,OAAO,UAAUT,EAAMU,OAC7E,YAAC,IAAD,YAAWT,EAAX,IAAuBG,GACvB,YAAC,IAAD,YAAWJ,EAAMW,OACjB,YAAC,IAAD,YAAWX,EAAMY,cAKvB,YAAC,IAAD,2B,wBCOOC,EA1BW,WACxB,IAAMC,EAAO,OAkBb,OAAIA,EAAKC,kBAAkBC,MAAMlB,OAAS,EACjCgB,EAAKC,kBAAkBC,MAAM,GAAGnB,OAGlCiB,EAAKC,kBAAkBC,OCNjBC,EAfE,SAAC,GAA0B,EAAxBC,MAAwB,IACpCrB,EAASgB,IACf,OACE,YAAC,IAAD,KACE,uBAAS/B,GAAI,CAAEqC,EAAG,CAAE5B,SAAU,CAAC,EAAG,EAAG,GAAIX,GAAI,KAC3C,YAAC,EAAD,OAEF,uBAASE,GAAI,CAAEqC,EAAG,CAAE5B,SAAU,CAAC,EAAG,EAAG,GAAIX,GAAI,KAC3C,YAAC,IAAD,CAAOwC,KAAK,sBACZ,YAAC,EAAD,CAAQvB,OAAQA,OCxBXwB,GAFEC,UCOA,YAAqB,IAC1BC,EAD0B,EAAlBT,KACRS,QAER,OAAO,kBAAC,EAAD,CAAUL,MAAOK,EAAQP,SDRb,a","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-8fe9c730fd743cdb78f4.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Heading, Image, Flex, Box, Link, Text } from \"@theme-ui/components\"\n\nconst Hero = () => (\n  <Flex mt={[100, 150]} mb={[100, 150]} sx={{ flexWrap: 'wrap', justifyContent: 'center' }}>\n    <Box sx={{ flex: '0 0 200px', marginRight: [0, 4, 4], marginBottom: [3, 4, 0] }}>\n      <Image\n        src='/banner.png'\n        alt='kanazawa.js'\n      />\n    </Box>\n    <Box>\n        <Heading as='h1' mb={3} sx={{ fontSize: [6, 7, 8], textAlign: 'center' }}>kanazawa.js</Heading>\n        <Heading as='h2' mb={2} sx={{ fontSize: [2, 3, 4], textAlign: 'center' }}>石川県金沢市のJavaScriptコミュニティです🧑‍💻</Heading>\n        <Text variant='heading' sx={{ fontSize: [2, 3, 4], mt: 2, textAlign: 'center' }}>Web FrontendからNode.jsまで、</Text>\n        <Text variant='heading' sx={{ fontSize: [2, 3, 4], mt: 2, textAlign: 'center' }}>ゆるっと交流したい方は気軽に<Link href='https://join.slack.com/t/kanazawajshq/shared_invite/zt-zabel33o-MeumyD4pkypwTej9Y9YECg'>Slack</Link>まで 🤝</Text>\n    </Box>\n  </Flex>\n)\n\nexport default Hero\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Text, Link } from \"@theme-ui/components\"\nimport * as moment from 'moment'\nimport 'moment/locale/ja'\n\nmoment.locale('ja')\n\ntype EventsProps = {\n  events: {\n    event_id: number\n    title: string\n    event_url: string\n    started_at: string\n    ended_at: string\n    place: string\n    address: string\n  }[]\n}\n\nconst Events = ({ events }: EventsProps) => (\n  <div>\n    {events.length > 0 ?\n      (events.map(event => {\n        if (event !== null) {\n          const startedAt = moment(event.started_at).format('YYYY/MM/DD (ddd) HH:mm')\n          const endedAt = moment(event.ended_at).format('HH:mm')\n          return (\n            <div key={event.event_id} sx={{ fontSize: [1, 2] }}>\n              <Link sx={{ fontSize: [2, 3]}} href={event.event_url} target=\"_blank\">{event.title}</Link>\n              <Text>日時: {startedAt}-{endedAt}</Text>\n              <Text>会場: {event.place}</Text>\n              <Text>住所: {event.address}</Text>\n            </div>\n          )\n        }\n      })) : (\n        <Text>直近の開催イベントはありません。</Text>\n      )\n    }\n  </div>\n)\n\nexport default Events \n","import { graphql, useStaticQuery } from \"gatsby\"\n\ntype Props = {\n  allConnpassEvents: {\n    nodes: {\n      events: {\n        event_id: number\n        title: string\n        event_url: string\n        started_at: string\n        ended_at: string\n        place: string\n        address: string\n      }[]\n    }[]\n  }\n}\n\nconst useConnpassEvents = () => {\n  const data = useStaticQuery<Props>(graphql`\n  query {\n    allConnpassEvents {\n      nodes {\n        events {\n          event_id\n          title\n          event_url\n          started_at\n          ended_at\n          place\n          address\n        }\n      }\n    }\n  }\n`)\n\n  if (data.allConnpassEvents.nodes.length > 0) {\n    return data.allConnpassEvents.nodes[0].events\n  }\n\n  return data.allConnpassEvents.nodes\n}\n\nexport default useConnpassEvents\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport Layout from \"./layout\"\r\nimport Hero from \"../../../components/hero\"\r\nimport Events from \"../../../components/events\"\r\nimport Title from \"./title\"\r\nimport useConnpassEvents from \"../hooks/use-connpass-events\"\r\n\r\ntype PostsProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n}\r\n\r\nconst Homepage = ({ posts }: PostsProps) => {\r\n  const events = useConnpassEvents()\r\n  return (\r\n    <Layout>\r\n      <section sx={{ p: { fontSize: [1, 2, 3], mt: 2 } }}>\r\n        <Hero />\r\n      </section>\r\n      <section sx={{ p: { fontSize: [1, 2, 3], mt: 2 } }}>\r\n        <Title text='Event Information'/>\r\n        <Events events={events}/>\r\n      </section>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Homepage\r\n","import { graphql } from \"gatsby\"\r\nimport HomepageComponent from \"../components/homepage\"\r\n\r\nexport default HomepageComponent\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\r\n      nodes {\r\n        slug\r\n        title\r\n        date(formatString: \"DD.MM.YYYY\")\r\n        tags {\r\n          name\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Homepage from \"../../../components/homepage\"\r\n\r\ntype Props = {\r\n  data: {\r\n    allPost: any\r\n    [key: string]: string\r\n  }\r\n}\r\n\r\nexport default ({ data }: Props) => {\r\n  const { allPost } = data\r\n\r\n  return <Homepage posts={allPost.nodes} />\r\n}\r\n"],"sourceRoot":""}